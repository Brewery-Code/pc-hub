# Generated by Django 5.1.4 on 2025-03-26 10:15

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Назва атрибуту')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Назва атрибуту')),
                ('name_uk', models.CharField(max_length=100, null=True, verbose_name='Назва атрибуту')),
            ],
            options={
                'verbose_name': 'Атрибут',
                'verbose_name_plural': 'Атрибути',
                'db_table': 'Attribute',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренди',
                'db_table': 'Brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Назва категорії')),
                ('name_en', models.CharField(max_length=50, null=True, verbose_name='Назва категорії')),
                ('name_uk', models.CharField(max_length=50, null=True, verbose_name='Назва категорії')),
                ('image', models.FileField(blank=True, null=True, upload_to='category_images/', verbose_name='Фото товару')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('order', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=60, null=True, unique=True, verbose_name='Слаг')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.category', verbose_name='Батьківська категорія')),
            ],
            options={
                'verbose_name': 'Категорія',
                'verbose_name_plural': 'Категорії',
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва товару')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Назва товару')),
                ('name_uk', models.CharField(max_length=255, null=True, verbose_name='Назва товару')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Опис товару')),
                ('description_en', models.TextField(blank=True, null=True, verbose_name='Опис товару')),
                ('description_uk', models.TextField(blank=True, null=True, verbose_name='Опис товару')),
                ('price', models.FloatField(verbose_name='Ціна товару')),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='Кількість на складі')),
                ('discount', models.PositiveIntegerField(default=0, help_text='Введіть знижку у відсотках (0-100)', verbose_name='Знижка (%)')),
                ('rating', models.FloatField(default=0.0, verbose_name='Рейтинг')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата створення')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата оновлення')),
                ('varranty', models.PositiveIntegerField(default=0, verbose_name='Гарантія')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.brand')),
                ('delivery_options', models.ManyToManyField(blank=True, related_name='products', to='orders.deliveryoption', verbose_name='Способи доставки')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товари',
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Значення атрибуту')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.attribute', verbose_name='ID атрибуту')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.product', verbose_name='ID товару')),
            ],
            options={
                'verbose_name': 'Атрибут продукту',
                'verbose_name_plural': 'Атрибути продуктів',
                'db_table': 'ProductAttribute',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Категорія товару',
                'verbose_name_plural': 'Категорії товару',
                'db_table': 'ProductCategory',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(related_name='products', through='product.ProductCategory', to='product.category', verbose_name='Категорії товару'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/%Y/%m/%d/', verbose_name='Фото товару')),
                ('is_main', models.BooleanField(default=False, verbose_name='Основне фото')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Фото товару',
                'verbose_name_plural': 'Фотографії товарів',
                'db_table': 'ProductImage',
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='Category_parent__cac101_idx'),
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['product'], name='ProductAttr_product_10d207_idx'),
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['attribute'], name='ProductAttr_attribu_5501a1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productcategory',
            unique_together={('product', 'category')},
        ),
    ]
